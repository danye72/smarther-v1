#!/bin/sh

path_dir="/config/smarther"
github_repo="danye72/smarther-v1"
prerelease="false"
subscribe="false"

# Loop through arguments and process them
for arg in "$@"
do
   case $arg in
      #-p=*|--path=*)
      #path_dir="${arg#*=}"
      #shift # Remove --path= from processing
      #;;
      -p|--path)
      path_dir="$2"
      shift # Remove argument name from processing
      shift # Remove argument value from processing
      ;;
      -r|--repo)
      github_repo="$2"
      shift # Remove argument name from processing
      shift # Remove argument value from processing
      ;;
      -pr|--prerelease)
      prerelease="$2"
      shift # Remove argument name from processing
      shift # Remove argument value from processing
      ;;
      -s|--subscribe)
      subscribe="$2"
      shift # Remove argument name from processing
      shift # Remove argument value from processing
      ;;
      *)
   esac
done

package_dir="/config/packages/smarther"
log="$path_dir/update.log"
temp_dir="$path_dir/.temp"
error=false

get_secret() {
   if [ $# -eq 0 ] ; then
      echo 'Usage: get_secret secret_key'
      exit 0
   fi
   cat /config/secrets.yaml |
   grep ^$1:                |
   sed -e 's/\s*:\s*/:/g'   | # remove spaces before and after :
   sed -e 's/\s*,\s*/,/g'   | # remove spaces before and after ,
   sed -e 's/"//g'          | # remove all "
   sed -e "s/'//g"          | # remove all '
   sed -e 's/ *$//'         | # remove spaces at the end of line
   sed -e 's/ /_/g'         | # replace spaces with _
   grep -Eo ':.*'           | # remove :
   sed -e 's/://'
}

if [ ! -d "$path_dir" ]; then
   mkdir -p $path_dir
   echo "$(date) | INFO  | ------------------------------" >> $log
   echo "$(date) | INFO  | --- INSTALLATION STARTING ----" >> $log
   echo "$(date) | WARN  | Folder $path_dir not exist. Created" >> $log
else
   echo "$(date) | INFO  | ------------------------------" >> $log
   echo "$(date) | INFO  | --- INSTALLATION STARTING ----" >> $log
fi
if [ ! -d "$package_dir" ]; then
   mkdir -p $package_dir
   echo "$(date) | WARN  | Folder $package_dir not exist. Created" >> $log
fi
if [ ! -d "$temp_dir" ]; then
   echo "$(date) | ERROR | Folder $temp_dir is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -d "$temp_dir/smarther" ]; then
   echo "$(date) | ERROR | Folder $temp_dir/smarther is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/smarther/conf_smarther.json" ]; then
   echo "$(date) | ERROR | File $temp_dir/smarther/conf_smarther.json is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -d "$temp_dir/lovelace" ]; then
   echo "$(date) | ERROR | Folder $temp_dir/lovelace is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/packages/smarther/smarther_update.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/packages/smarther/smarther_update.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/packages/smarther/smarther_nome_termostato.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/packages/smarther/smarther_nome_termostato.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/packages/smarther/smarther_webhooks.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/packages/smarther/smarther_webhooks.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/packages/smarther/smarther_update.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/packages/smarther/smarther_update.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/lovelace/thermostat_card.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/lovelace/thermostat_card.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/lovelace/thermostat_view.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/lovelace/thermostat_view.yaml is missing. Check repo URL" >> $log
   error=true
fi
if [ ! -f "$temp_dir/lovelace/smarther_dashboard.yaml" ]; then
   echo "$(date) | ERROR | File $temp_dir/lovelace/smarther_dashboard.yaml is missing. Check repo URL" >> $log
   error=true
fi
if ! awk '/\r$/ { exit(1) }' /config/secrets.yaml ; then
   echo "$(date) | WARN  | secrets file has at least one Windows-style line ending. It will be converted" >> $log
   cat /config/secrets.yaml \
   | awk '{ sub("\r$", "); print }' \
   > /config/secrets_temp.yaml
   mv /config/secrets_temp.yaml /config/secrets.yaml
fi

prerelease_tolower=$(echo "$prerelease" | awk '{print tolower($0)}')
if [ ! -z "$prerelease_tolower" ] ; then
   case "$prerelease_tolower" in
      "true")
            update_cmd='ver=$(curl -ksL "https://api.github.com/repos/__github_repo__/releases" | jq -r "map(select(.draft==false)) | first" | jq -r ".tag_name") \&\& curl -s "https://raw.githubusercontent.com/__github_repo__/$ver/script/update" | bash -s'
            latest_release_cmd='curl --silent "https://api.github.com/repos/__github_repo__/releases" | jq -r "map(select(.draft==false)) | first"'
            ;;
        *)
            update_cmd='ver=$(curl -ksL "https://api.github.com/repos/__github_repo__/releases/latest" | jq -r ".tag_name") \&\& curl -s "https://raw.githubusercontent.com/__github_repo__/$ver/script/update" | bash -s'
            latest_release_cmd='curl --silent "https://api.github.com/repos/__github_repo__/releases/latest"'
            ;;
   esac
else
   update_cmd='ver=$(curl -ksL "https://api.github.com/repos/__github_repo__/releases/latest" | jq -r ".tag_name") \&\& curl -s "https://raw.githubusercontent.com/__github_repo__/$ver/script/update" | bash -s'
   latest_release_cmd='curl --silent "https://api.github.com/repos/__github_repo__/releases/latest"'
fi

client_id=$(get_secret bticino_thermostat_client_id)
client_secret=$(get_secret bticino_thermostat_client_secret)
subscription_key=$(get_secret bticino_thermostat_subscription_key)
code=$(get_secret bticino_thermostat_code)
domain=$(get_secret domain)
thermostat_name_orig=$(get_secret bticino_thermostat_name)
thermostat_name_list=`echo $thermostat_name_orig | awk '{print tolower($0)}'`

if [ -z "$client_id" ]; then
   echo "$(date) | ERROR | The mandatory variable <<bticino_thermostat_client_id>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi
if [ -z "$client_secret" ]; then
   echo "$(date) | ERROR | The mandatory variable <<bticino_thermostat_client_secret>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi
if [ -z "$subscription_key" ]; then
   echo "$(date) | ERROR | The mandatory variable <<bticino_thermostat_subscription_key>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi
if [ -z "$code" ]; then
   echo "$(date) | ERROR | The mandatory variable <<bticino_thermostat_code>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi
if [ -z "$domain" ]; then
   echo "$(date) | ERROR | The mandatory variable <<domain>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi
if [ -z "$thermostat_name_list" ]; then
   echo "$(date) | ERROR | The mandatory variable <<bticino_thermostat_name>> not set to the secret file. Please add it on /config/secrets.yaml file!" >> $log
   error=true
fi

if [ $error = false ]; then
   echo "$(date) | INFO  | Copy files to $path_dir" >> $log
   cp $temp_dir/smarther/smarther.py $path_dir/smarther.py
   cp $temp_dir/.smarther_version $path_dir/.smarther_version

   echo "$(date) | INFO  | Copy files to lovelace folder" >> $log
   if [ ! -d "$path_dir/lovelace" ]; then
      mkdir -p $path_dir/lovelace
      echo "$(date) | WARN  | Folder $path_dir/lovelace not exist. Created" >> $log
   fi
   cp -rf $temp_dir/lovelace/* $path_dir/lovelace
   
   echo "$(date) | INFO  | Replace keys from secret in $path_dir/conf_smarther.json" >> $log
   cat $temp_dir/smarther/conf_smarther.json \
   | sed -e "s/__client_id__/$client_id"/g \
   | sed -e "s/__client_secret__/$client_secret"/g \
   | sed -e "s/__primary_key__/$subscription_key"/g \
   | sed -e "s/__code__/$code"/g \
   | sed -e "s/__c2c_url__/https:\/\/$domain\/api\/webhook\/smarther475600"/g \
   > $path_dir/conf_smarther_temp.json
   mv $path_dir/conf_smarther_temp.json $path_dir/conf_smarther.json
   
   if [ $subscribe = "true" ]; then
      echo "$(date) | WARN  | New subscribe has been forced" >> $log
      jq 'del(.c2c)' $path_dir/conf_smarther.json \
      > $path_dir/conf_smarther_temp.json
      mv $path_dir/conf_smarther_temp.json $path_dir/conf_smarther.json
   fi
   echo "$(date) | INFO  | Saved $path_dir/conf_smarther.json" >> $log

   entity_id_orig=$(cat $temp_dir/packages/smarther/smarther_webhooks.yaml | grep entity_id: | grep -Eo ':.*' | sed 's/://')

   echo "$(date) | INFO  | Loop through a comma-separated shell variable to support multiple thermostat" >> $log
   for thermostat_name in $(echo $thermostat_name_list | sed "s/,/ /g")
      do
      entity_id_target=$entity_id_target,$(echo $entity_id_orig | sed "s/nome_termostato/$thermostat_name"/g)

      echo "$(date) | INFO  | Copy smarther_nome_termostato.yaml in $package_dir/smarther_$thermostat_name.yaml" >> $log
      cat $temp_dir/packages/smarther/smarther_nome_termostato.yaml \
      | sed "s/nome_termostato/$thermostat_name"/g \
      > $package_dir/smarther_$thermostat_name.yaml
      echo "$(date) | INFO  | Saved $package_dir/smarther_$thermostat_name.yaml" >> $log
      
      echo "$(date) | INFO  | Create lovelace thermostat cards" >> $log
      cat $temp_dir/lovelace/thermostat_card.yaml \
      | sed "s/nome_termostato/$thermostat_name"/g \
      > $path_dir/lovelace/thermostat_card_$thermostat_name.yaml
      echo "$(date) | INFO  | Saved $path_dir/lovelace/thermostat_card_$thermostat_name.yaml" >> $log
   done

   echo "$(date) | INFO  | Create lovelace thermostat view with the cards" >> $log
   echo >> $path_dir/lovelace/thermostat_view.yaml
   for f in $path_dir/lovelace/thermostat_card_*.yaml; do
      echo "$(date) | INFO  | Add card $f" >> $log
      echo "  - !include $f" >> $path_dir/lovelace/thermostat_view.yaml
   done

   echo "$(date) | INFO  | Copy smarther_webhooks.yaml" >> $log
   entity_id_target=$(echo $entity_id_target | sed 's/^,//')

   cat $temp_dir/packages/smarther/smarther_webhooks.yaml \
   | sed "s/$entity_id_orig/ $entity_id_target"/ \
   > $package_dir/smarther_webhooks.yaml
   echo "$(date) | INFO  | Saved $package_dir/smarther_webhooks.yaml" >> $log

   cat $temp_dir/packages/smarther/smarther_update.yaml \
   | sed -e "s~__update_cmd__~$update_cmd"~ \
   | sed "s~__latest_release_cmd__~$latest_release_cmd"~ \
   | sed "s~__github_repo__~$github_repo"~g \
   > $package_dir/smarther_update.yaml
   echo "$(date) | INFO  | Saved $package_dir/smarther_update.yaml" >> $log

   echo "$(date) | INFO  | --- CLEAN-UP ---" >> $log
   rm -rf $temp_dir
   update=$path_dir/update
   if [ -f "$update" ]; then
      rm -f $update
   fi

   echo "$(date) | INFO  | --- INSTALLATION COMPLETED ---" >> $log
   echo "$(date) | INFO  | ------------------------------" >> $log

else
   echo "$(date) | ERROR | Something went wrong :( Checks the log file!" >> $log
   exit 1
fi
