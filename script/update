#!/bin/sh

#SHOULD_INITIALIZE=0
path_dir="/config/smarther"
github_repo="danye72/smarther-v1"

# Loop through arguments and process them
for arg in "$@"
do
    case $arg in
        #-i|--initialize)
        #SHOULD_INITIALIZE=1
        #shift # Remove --initialize from processing
        #;;
        #-p=*|--path=*)
        #path_dir="${arg#*=}"
        #shift # Remove --path= from processing
        #;;
        -p|--path)
        path_dir="$2"
        shift # Remove argument name from processing
        shift # Remove argument value from processing
        ;;
        -r|--repo)
        github_repo="$2"
        shift # Remove argument name from processing
        shift # Remove argument value from processing
        ;;
        *)
    esac
done

log="$path_dir/update.log"
temp_dir="$path_dir/.temp"
error=false

if [ ! -d "$path_dir" ]; then
    mkdir -p $path_dir
    echo "$(date) | WARN  | $path_dir not exist. Folder created" >> $log
fi
if [ ! -d "$temp_dir" ]; then
    mkdir -p $temp_dir
    echo "$(date) | INFO  | Creating temporary folder $temp_dir" >> $log
else
    rm -rf $temp_dir/*
    echo "$(date) | WARN  | Clean-up temporary folder $temp_dir" >> $log
fi

#curl -s "https://api.github.com/repos/$github_repo/releases/latest" \
#| grep '"tag_name":' \
#| sed -E 's/.*"([^"]+)".*/\1/' \
#| xargs -I {} wget -O $temp_dir/smarther.tar.gz "https://api.github.com/repos/$github_repo/tarball/"{}

latest_release=$(curl -ksL "https://api.github.com/repos/$github_repo/releases/latest")
if [ ! -z "$latest_release" ]; then
    wget -O $temp_dir/smarther.tar.gz $(echo $latest_release | jq -r ".tarball_url")
    if [ ! -f "$temp_dir/smarther.tar.gz" ]; then
        echo "$(date) | ERROR | Something went wrong downloading latest relese: $(echo $latest_release | jq -r ".tarball_url")" >> $log
        error=true
    fi
    tar -xvf $temp_dir/smarther.tar.gz --exclude="*/.*/*" --strip 1 --directory $temp_dir
    if [ ! -f "$temp_dir/script/update" ]; then
        echo "$(date) | ERROR | File $temp_dir/script/update is missing. Check repo URL" >> $log
        error=true
    fi
    if [ ! -f "$temp_dir/script/install" ]; then
        echo "$(date) | ERROR | File $temp_dir/script/install is missing. Check repo URL" >> $log
        error=true
    fi  
else   
    echo "$(date) | ERROR | Something went wrong downloading latest relese info: https://api.github.com/repos/$github_repo/releases/latest" >> $log
    error=true
fi

if [ $error = false ]; then
    echo $latest_release | python -m json.tool > $temp_dir/.smarther_version
    echo "$(date) | INFO  | Launch install script" >> $log
    chmod +x $temp_dir/script/update
    chmod +x $temp_dir/script/install
    sh -x $temp_dir/script/install --path $path_dir --repo $github_repo >> $log
else
    echo "$(date) | ERROR | Something went wrong :( Checks the log file" >> $log
    exit 1
fi
